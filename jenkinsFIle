pipeline {
    agent any

    environment {
        NEXUS_URL = "https://nexus.tuempresa.com/repository/automation-status/automation_status.json"
        NEXUS_USER = credentials('nexus-user')
        NEXUS_PASS = credentials('nexus-pass')
        FILE_NAME = "automation_status.json"
    }

    stages {
        stage('Ejemplo de ejecución') {
            steps {
                echo "Aquí iría la lógica principal del pipeline..."
                // error("Forzar fallo para probar el post") // Descomenta para probar el bloque failure
            }
        }
    }

    post {
        success {
            script {
                echo "✅ Pipeline finalizado con éxito. Estado: UP"
                updateStatus("UP")
            }
        }
        failure {
            script {
                echo "❌ Pipeline fallido. Estado: DOWN"
                updateStatus("DOWN")
            }
        }
    }
}

def updateStatus(String newStatus) {
    def file = env.FILE_NAME
    def name = env.JOB_NAME

    sh """
        echo "Descargando JSON desde Nexus..."
        curl -u $NEXUS_USER:$NEXUS_PASS -s -o $file $NEXUS_URL
    """

    def data = readJSON file: file

    if (!(data instanceof List)) {
        data = []
    }

    def existing = data.find { it.containsKey(name) }

    if (existing) {
        existing[name] = newStatus
    } else {
        data << [(name): newStatus]
    }

    writeJSON file: file, json: data, pretty: 4

    sh """
        echo "Subiendo JSON actualizado a Nexus..."
        curl -u $NEXUS_USER:$NEXUS_PASS -X PUT -T $file $NEXUS_URL
    """
}
pipeline {
    agent any

    environment {
        NEXUS_URL = "https://nexus.tuempresa.com/repository/automation-status/automation_status.json"
        NEXUS_USER = credentials('nexus-user')
        NEXUS_PASS = credentials('nexus-pass')
        FILE_NAME = "automation_status.json"
    }

    stages {
        stage('Ejemplo de ejecución') {
            steps {
                echo "Aquí iría la lógica principal del pipeline..."
                // error("Forzar fallo para probar el post") // Descomenta para probar el bloque failure
            }
        }
    }

    post {
        success {
            script {
                echo "✅ Pipeline finalizado con éxito. Estado: UP"
                updateStatus("UP")
            }
        }
        failure {
            script {
                echo "❌ Pipeline fallido. Estado: DOWN"
                updateStatus("DOWN")
            }
        }
    }
}

def updateStatus(String newStatus) {
    def file = env.FILE_NAME
    def name = env.JOB_NAME

    sh """
        echo "Descargando JSON desde Nexus..."
        curl -u $NEXUS_USER:$NEXUS_PASS -s -o $file $NEXUS_URL
    """

    def data = readJSON file: file

    if (!(data instanceof List)) {
        data = []
    }

    def existing = data.find { it.containsKey(name) }

    if (existing) {
        existing[name] = newStatus
    } else {
        data << [(name): newStatus]
    }

    writeJSON file: file, json: data, pretty: 4

    sh """
        echo "Subiendo JSON actualizado a Nexus..."
        curl -u $NEXUS_USER:$NEXUS_PASS -X PUT -T $file $NEXUS_URL
    """
}
java -DproxySet=false -Djava.net.useSystemProxies=false -jar agent.jar -jnlpUrl https://jenkins.midominio.com/computer/AGENTE/jenkins-agent.jnlp -secret <token> -webSocket
java -Djava.net.useSystemProxies=false -DproxySet=false -Dhttp.proxyHost= -Dhttp.proxyPort= -Dhttps.proxyHost= -Dhttps.proxyPort= -jar agent.jar -jnlpUrl https://tuservidor/jenkins/computer/agente/slave-agent.jnlp -secret ABC123456

